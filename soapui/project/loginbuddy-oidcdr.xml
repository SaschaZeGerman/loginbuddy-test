<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d7e69813-3e43-4271-9a72-2960c860be3e" activeEnvironment="Default" name="C2-Loginbuddy-OIDCDR" resourceRoot="" soapui-version="5.7.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="684d0805-3b8c-4179-82d2-2f7f37108e5f" name="RegisteredProvider"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="c59ae206-0f5d-4537-a770-12a4215fd7aa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthCode" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="AuthCodeDynamicProvider" id="e4b92b30-dde7-42f8-85eb-ddb02d68fc6d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="AuthCodeDynamicProvider" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client  calls loginbuddy to retrieve list of providers. This checks for the existence of the 'fake'   provider for testing purposes. also checks if tokens were obfuscated</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_authorize}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>state</con:name><con:value>${#Project#state}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id_confidential}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>response_type</con:name><con:value>code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>scope</con:name><con:value>openid email profile</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>provider</con:name><con:value>${#Project#provider_dynamic}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="setProviderEndpoint" id="6ad23a67-4689-49ef-be9a-f0221905f3a0"><con:description>Set the endpoint for the next test step</con:description><con:settings/><con:config><script>//Find the 'Location' header of the response
  def location =
  testRunner.testCase.testSteps["AuthCodeDynamicProvider"].testRequest.response.responseHeaders["Location"][0]

  // Write the 'location' into the 'endpoint' of the testStep 'callProvider'
  def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
  groovyUtils.setPropertyValue("AuthCodeStep2",
  "Endpoint", location.toString())</script></con:config></con:testStep><con:testStep type="httprequest" name="AuthCodeStep2" id="fa79def9-afa1-4b2b-966e-67ca406919a1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="AuthCodeStep2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client  calls loginbuddy to retrieve list of providers. This checks for the existence of the 'fake'   provider for testing purposes. also checks if tokens were obfuscated</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://local.loginbuddy.net/initialize?session=a5fb173e-dbea-4dc0-b6db-6137c1bef0e6</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4d28a4b0-563d-460a-97f5-19023f4ee0d0" name="check: request_uri"><con:configuration><scriptText>// Find the 'Location' header of the response
    assert messageExchange.responseHeaders["Location"] != null

    def location = messageExchange.responseHeaders["Location"][0]

    // Check if all expected parameters are included in the redirect_uri
    assert(location.contains("client_id"));
    assert(location.contains("request_uri"));</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="77ee8ecd-3c76-4b52-889c-534d771565c9" name="NewProvider"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="87122e03-4466-49f7-a1f9-a2ddecbfac1f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthCode" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="AuthCodeDynamicProvider" id="50191584-a307-49ec-9314-87fe449bf95d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="AuthCodeDynamicProvider" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client  calls loginbuddy to retrieve list of providers. This checks for the existence of the 'fake'   provider for testing purposes. also checks if tokens were obfuscated</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_authorize}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>state</con:name><con:value>${#Project#state}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>response_type</con:name><con:value>code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>scope</con:name><con:value>openid email profile</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="loginbuddy-getDetails" id="3a51cf57-2028-46df-9c1c-4e45612fd457"><con:description>Extract the 'state' parameter and get the 'action' which is the next location</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>form_action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>AuthCodeDynamicProvider</con:sourceStep><con:sourcePath>//form[input/@value='${#Project#provider_test}']/@action</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>loginbuddy-nextLocation</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>session</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>AuthCodeDynamicProvider</con:sourceStep><con:sourcePath>//form[input/@value='${#Project#provider_test}']/input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>AuthCodeStep2</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="loginbuddy-nextLocation" id="44cc17c2-834f-4fae-9323-41a812736166"><con:description>Setting a variable to be used later as URL path</con:description><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>action</con:name><con:value>initialize</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="AuthCodeStep2" id="45604f7b-ac37-4684-82b1-ddf4cfe30d46"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="AuthCodeStep2" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client  calls loginbuddy to retrieve list of providers. This checks for the existence of the 'fake'   provider for testing purposes. also checks if tokens were obfuscated</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}/${#action}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4d28a4b0-563d-460a-97f5-19023f4ee0d0" name="check: request_uri"><con:configuration><scriptText>// Find the 'Location' header of the response
    assert messageExchange.responseHeaders["Location"] != null

    def location = messageExchange.responseHeaders["Location"][0]

    // Check if all expected parameters are included in the redirect_uri
    assert(location.contains("client_id"));
    assert(location.contains("request_uri"));</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>provider</con:name><con:value>dynamic_provider</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>08cafc13-6e12-4f4b-8dda-37dc4f1dbe1d</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>issuer</con:name><con:value>${#Project#host_fake_Server}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>host</con:name><con:value>https://local.loginbuddy.net</con:value></con:property><con:property><con:name>host_sidecar</con:name><con:value>https://loginbuddy-sidecar</con:value></con:property><con:property><con:name>host_oidcdr</con:name><con:value>https://loginbuddy-oidcdr:445</con:value></con:property><con:property><con:name>host_http</con:name><con:value>http://local.loginbuddy.net</con:value></con:property><con:property><con:name>host_helper</con:name><con:value>http://local.loginbuddy.net:8999</con:value></con:property><con:property><con:name>host_fake_Server</con:name><con:value>https://demoserver.loginbuddy.net:8443</con:value></con:property><con:property><con:name>port_sidecar</con:name><con:value>444</con:value></con:property><con:property><con:name>redirect_uri</con:name><con:value>https://local.soapui.com/redirect</con:value></con:property><con:property><con:name>client_id</con:name><con:value>clientIdForTestingPurposes</con:value></con:property><con:property><con:name>client_secret</con:name><con:value>d5453153-e096-4672-bcb5-313d9847c8de</con:value></con:property><con:property><con:name>client_id_confidential</con:name><con:value>clientIdForTestingPurposesConfidential</con:value></con:property><con:property><con:name>client_secret_confidential</con:name><con:value>myFancyAndSecureClientSecret</con:value></con:property><con:property><con:name>client_id_jwt</con:name><con:value>clientIdForTestingPurposesJwt</con:value></con:property><con:property><con:name>path_authorize</con:name><con:value>/authorize</con:value></con:property><con:property><con:name>path_initialize</con:name><con:value>/initialize</con:value></con:property><con:property><con:name>path_token</con:name><con:value>/token</con:value></con:property><con:property><con:name>path_callback</con:name><con:value>/callback</con:value></con:property><con:property><con:name>path_discovery</con:name><con:value>/.well-known/openid-configuration</con:value></con:property><con:property><con:name>path_providers_jsp</con:name><con:value>/iapis/providers.jsp</con:value></con:property><con:property><con:name>path_error_jsp</con:name><con:value>/iapis/error.jsp</con:value></con:property><con:property><con:name>path_sidecar_initialize</con:name><con:value>/sidecar/initialize</con:value></con:property><con:property><con:name>path_oidcdr_register</con:name><con:value>/oidcdr/register</con:value></con:property><con:property><con:name>path_helper_jwt</con:name><con:value>/test/generate/jwt</con:value></con:property><con:property><con:name>redirect_uri_helper</con:name><con:value>https://local.loginbuddy.net/callback</con:value></con:property><con:property><con:name>provider_test</con:name><con:value>server_loginbuddy</con:value></con:property><con:property><con:name>email</con:name><con:value>fake@emailaddress.com</con:value></con:property><con:property><con:name>password</con:name><con:value>fakePAssword</con:value></con:property><con:property><con:name>state</con:name><con:value>soapuiFakeState</con:value></con:property><con:property><con:name>issuer_selfissued</con:name><con:value>https://self-issued.me</con:value></con:property><con:property><con:name>provider_dynamic</con:name><con:value>server_dynamic</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>